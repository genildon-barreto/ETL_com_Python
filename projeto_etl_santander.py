# -*- coding: utf-8 -*-
"""Projeto_ETL_Santander.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SYoNl-1hWij7p9s_1t8GfEDWjdoOGv-C

# Santander Ciência de Dados (ETL c/Python)

**Contexto:**</br>
Requisição de Serviço para Conversão de Dados de Excel para PDF com Mensagens Personalizadas

</br>**Descrição do Serviço:**</br>
Realizar conversão de Dados Excel para PDF: Realizar a conversão dos dados contidos no arquivo Excel para um arquivo PDF único.

</br>**Filtragem de Clientes:**</br>
Identificar os clientes que aniversariam durante a semana, com base na data de aniversário que está contida na coluna D do Excel.

</br>**Personalização das Mensagens:**</br>
Para cada cliente que aniversaria durante a semana, personalizar a mensagem no PDF. A mensagem deve incluir o nome com primeiro sobrenome ou nome composto do cliente, que está contido na coluna A do Excel, da seguinte forma:

```
"Olá {nome}, tudo bem? Essa semana você está aniversariando
e para comemorar estamos com uma promoção! A partir de R$30
em compras com pagamento por PIX, ganhe 10% de cashback na
sua conta!"
```

</br>**Formatação do PDF:**</br>
Inserir as mensagens personalizadas no PDF com um espaçamento de duas linhas entre elas.

</br>**Entregáveis Esperados:**</br>
Arquivo PDF único contendo todas as mensagens personalizadas conforme os critérios mencionados.

</br>**Observações Adicionais:**
* O arquivo Excel contém os dados dos clientes, com as colunas A contendo o nome completo, e a coluna D contendo a data de aniversário;
* O processo de conversão dos dados deve ser automatizado;</br>
* O PDF final deve ser de alta qualidade e legível.

# Extract
"""

import pandas as pd
!pip install fpdf2

from fpdf import FPDF
from datetime import datetime, timedelta

df = pd.read_excel('Clientes_Planilha.xlsx')

#Verifica o conteúdo do DataFrame
print(df.head())

# Definir datas atual e da próxima semana
data_atual = datetime.now()
data_inicio_semana = data_atual + timedelta(days=(7 - data_atual.weekday()))
data_fim_semana = data_inicio_semana + timedelta(days=7)

# Filtrar clientes com aniversário na próxima semana
clientes_aniversariantes = df[df['DATA DE NASCIMENTO'].apply(lambda x: (data_inicio_semana <= x.replace(year=data_atual.year) <= data_fim_semana))]

#Verifica o DataFrame dos clientes
print(clientes_aniversariantes)

"""# Transform & Load"""

# Verifica se o DataFrame está vazio, caso contrário cria o PDF iterando com os clientes aniversariantes
if clientes_aniversariantes.empty:
    print("Nenhum cliente encontrado para a próxima semana.")
else:
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("helvetica", size=12)

    for _, row in clientes_aniversariantes.iterrows():
        nome = row['NOME']
        nome_sobrenome = nome.split()[0]
        if len(nome.split()) > 1:
          nome_sobrenome += " " + nome.split()[1]

        mensagem = f"Olá {nome_sobrenome}, tudo bem? Essa semana você está aniversariando e para comemorar estamos com uma promoção! A partir de R$30 em compras com pagamento por PIX, ganhe 10% de cashback na sua conta."

        pdf.multi_cell(0, 10, txt=mensagem, align="L")
        pdf.ln(20)  # Adiciona um espaçamento de duas linhas

    # Salvar o PDF
    pdf_output_file = "mensagens_aniversario_clientes.pdf"
    pdf.output(pdf_output_file)

    print(f'O arquivo {pdf_output_file} foi gerado com sucesso.')

    from google.colab import files
    files.download(pdf_output_file)